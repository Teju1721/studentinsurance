<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-28T13:25:58 IST" name="Default suite" finished-at="2024-02-28T13:26:18 IST" duration-ms="20120">
    <groups>
      <group name="sanity">
        <method signature="TravelInsuranceTest.SelectDestination()[pri:3, instance:policybazaar.test.TravelInsuranceTest@7c711375]" name="SelectDestination" class="policybazaar.test.TravelInsuranceTest"/>
        <method signature="TravelInsuranceTest.ViewPlan()[pri:6, instance:policybazaar.test.TravelInsuranceTest@7c711375]" name="ViewPlan" class="policybazaar.test.TravelInsuranceTest"/>
        <method signature="TravelInsuranceTest.testSelectDate()[pri:4, instance:policybazaar.test.TravelInsuranceTest@7c711375]" name="testSelectDate" class="policybazaar.test.TravelInsuranceTest"/>
        <method signature="TravelInsuranceTest.testSelectNumberOfTravellers()[pri:5, instance:policybazaar.test.TravelInsuranceTest@7c711375]" name="testSelectNumberOfTravellers" class="policybazaar.test.TravelInsuranceTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2024-02-28T13:25:58 IST" name="Default test" finished-at="2024-02-28T13:26:18 IST" duration-ms="20120">
      <class name="policybazaar.test.TravelInsuranceTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:25:58 IST" name="setup" finished-at="2024-02-28T13:26:10 IST" duration-ms="11564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testTravelInsuranceButtonClick()[pri:1, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:10 IST" name="testTravelInsuranceButtonClick" finished-at="2024-02-28T13:26:10 IST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTravelInsuranceButtonClick -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:10 IST" name="afterMethod" finished-at="2024-02-28T13:26:10 IST" duration-ms="227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTravelInsuranceButtonClick status=SUCCESS method=TravelInsuranceTest.testTravelInsuranceButtonClick()[pri:1, instance:policybazaar.test.TravelInsuranceTest@7c711375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testSwitchToChildWindow()[pri:2, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:10 IST" name="testSwitchToChildWindow" finished-at="2024-02-28T13:26:10 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchToChildWindow -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:10 IST" name="afterMethod" finished-at="2024-02-28T13:26:11 IST" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSwitchToChildWindow status=SUCCESS method=TravelInsuranceTest.testSwitchToChildWindow()[pri:2, instance:policybazaar.test.TravelInsuranceTest@7c711375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="SelectDestination()[pri:3, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:11 IST" name="SelectDestination" finished-at="2024-02-28T13:26:14 IST" duration-ms="3656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectDestination -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:14 IST" name="afterMethod" finished-at="2024-02-28T13:26:15 IST" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectDestination status=SUCCESS method=TravelInsuranceTest.SelectDestination()[pri:3, instance:policybazaar.test.TravelInsuranceTest@7c711375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testSelectDate()[pri:4, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:15 IST" name="testSelectDate" finished-at="2024-02-28T13:26:16 IST" duration-ms="1047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectDate -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:16 IST" name="afterMethod" finished-at="2024-02-28T13:26:16 IST" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectDate status=SUCCESS method=TravelInsuranceTest.testSelectDate()[pri:4, instance:policybazaar.test.TravelInsuranceTest@7c711375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testSelectNumberOfTravellers()[pri:5, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:16 IST" name="testSelectNumberOfTravellers" finished-at="2024-02-28T13:26:17 IST" duration-ms="1547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectNumberOfTravellers -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:17 IST" name="afterMethod" finished-at="2024-02-28T13:26:18 IST" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectNumberOfTravellers status=SUCCESS method=TravelInsuranceTest.testSelectNumberOfTravellers()[pri:5, instance:policybazaar.test.TravelInsuranceTest@7c711375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="ViewPlan()[pri:6, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:18 IST" name="ViewPlan" finished-at="2024-02-28T13:26:18 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot read field "MobileNo" because "this.data" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot read field "MobileNo" because "this.data" is null
at policybazaar.test.TravelInsuranceTest.ViewPlan(TravelInsuranceTest.java:157)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ViewPlan -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:18 IST" name="afterMethod" finished-at="2024-02-28T13:26:18 IST" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ViewPlan status=FAILURE method=TravelInsuranceTest.ViewPlan()[pri:6, instance:policybazaar.test.TravelInsuranceTest@7c711375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:policybazaar.test.TravelInsuranceTest@7c711375]" started-at="2024-02-28T13:26:18 IST" name="tearDown" finished-at="2024-02-28T13:26:18 IST" duration-ms="547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- policybazaar.test.TravelInsuranceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
